package uz.leetCode.arrays;


import java.util.Stack;
import java.util.stream.Collectors;

public class RemoveAllAdjacentDuplicatesInString {

    public static void main(String[] args) {
        String s = "cepjkspjcuilrnnfsmlpmrbtgjbgabuotaglkedjkurfamgeejkfnuihjptetlsqqfhcttrojbqpphaggiftmmechoheoppnhnufnrikotrfqjktcthcsnhhdqpfpooddjkproerdljudticrbefsfpouihkfnrfgoljoriclpjtgnikllpfabdsfsfkkftunaifqhkhclfomfntllijhebgibfotmhcbqdalsqmpgqmhouqqltqmahaidbdoreiltcaagcolfgguracilhkrlgfjfukbtrfqmngaooasrqtjncmoupbtepidpbogkenenoeglrfhpurondkphueuufeksnqkoggafgifserfpllmuiqmennltfpijdojekmfatmmfnhkroniublhgtqkqfurqlllarnmpqiteuplhijrcldomlpsechliedfrrahnpobuhktipheinorcehlounrnmdeahlltpfcafdkiajbukbbflebgsshullambefpekaocamsnandgaaadisfhkjnigolptdhjqqkmndmjetmtfuralmqbttpfuarcqnfoblchhedcgfujiucppdqmnbrsdbjjcsflilgessclnhrlnfoqfiqepuaqkfglludrnslueutaeilemgrmlicrbqqbdrecarrofaufshbueislkajectmhphfrssmlkicbphepuneleiqsjulcembumqhopdprbiikesbotbudfhnbfeutmtldjdidhkomfqqhdmmhncehoklrmoqdolfdphjkpjppmakqetausugmcumrmdjpsumdptdqfmgaijtcrskcajdfgqhrqaabjcumjjdeimsmnahqdhudgpuegkrsfmmimkhkqfqsgjoosfjeaisfdqnlcgisralblcnjhldahahsfqjhrnptdtatkfheuaffprsnpasptoskbhbceejmfrsgjcgjiurriokcgpiqtmjbgqaeprbciqoerpgrrrcucoccrhgehmanndghbkrksdhrrpcmokmjioojfolebrjssbhaesofsskitgcrjkbgptcetfbbltbtdbkanhetmotelmsfqrqbiqhfotgichkgubrrahgqhocfrndhcnhtaclfgueotmhgfqpgkndphlqdugqtttrsgsqnprqphdmjgdjuqminptooijnseitrtcqttunfnhnncseputfdfiefqnsbscqthdhirfnjbrnoiighhcikfidhesrmrrlttiderkeqlpcdkqqrdhobrjrilirapdfoehhgschndgogjpmugpdihmfibhqgblnldnghitiecqikooumgftmsdrbeftnjhnfuejqrksonprqtltlchgusfltfmgrobjesamctlbtfihmtirmbnmljiqbthsktehddjhpdunlqcdegebeugsujmbprbptlrrucgbhgkomorlsojdthfpicpudbimuhjlqqgcmthkuiqarutoldogpombfqfkdjatbbgfdjbaioehhirkdpfrklujlbcdiuhmoljugjqupdggqaceoapfmqdcejossuqtoonrdfeaoeouhuneelgffbgpbskpdccdtolijkuooocjskipmrbraijaoqgfthemgmdlpqophkbgcbptlbftoipolqearkaehcehgbguorcdaqanihrfjqdtikpgkccjfkcrfneckohbnopnrsefnkjdofrlafnrfmnuqhdduamacekienfljrpblrgqsqqijrfrunctqfspltnbanckgacjokaidejebkhbmeudfklchfgptbruiikfdrkusuucbhorjnkrcicghdgifqeitrflhqcsncqnifanhsuskhochdoeokdkifgkdodfrcrqohunfrctcoppkjmobducfolqssfmsccinrbgfalsbstodtdssqfuecfdonijisikhdtnjpmskjfghmbppnsrmkafphnenflptpmdpgehlafgnneknutshslrmdhtfkulqtafoormoflcjdetatncbattmdceqncqcqatqpiekcgumoprihejsrahorapfgqjeltudlpjlguqgqtqkhtstehjglcunqnkejssoasdqtsdpbbbeqcggdfapqofddkfrlreselqgicnpolpocrsfubjlnhibilmnrjpkbrudsrrmlldninlldeojomeiamqhlgspibrssffopfhdkkplpqqafoqodqpllogjeflfdahocrrtcjkpfnuuujuegcnnlddofjbjdluladthsbrshjtuhsuoieshauobssbuihsjutkpkqbhjgkpneluidjedrmqcmjroelsfolkglunnjbkfmouqarqljunptbjjagaprsorodutknpqdsmdehtcbkhqqolsucrqmspiacjpdkanbrmbnthaksseiosspsggsquetkgiakkhtjdstnojadgnhskbjleblkoflriscpmrquqpmsphpduqmoeeusggqhhbngunjjlkpusrikfgbbntiqclcptcdpufjceqmukeiplrccrhgdropmoscmnnrdnklhlmohfihcmjbsfleinmggliicapqakpntnrqcdqrrgntckphhgnarerlrjcbuioejjhscabsqeqqoahqacamljaopcaaqdlterjtcuhmtubgsngrrfbtthnsngdmmpjatnemijiocukodqbgujhbldeakffifbmsutidfmtuhsuinftfcauenrpfcncehtuetgsrsnednqfnbtgaqnitljcgdnpoheagmlrjlfaluuelujlocillskmhukekmeehbkscdatsgrlnoqhepoehibibdnunojhlqkfaocfdjocjebjtludadtsqmuompmlekjprnqrdnjokarfpalqqoudfstqqikhutmeuiuhshidlhmaohllijndakdqupuirrfgajqdhpurhemfqcamakenjhnskaisifaaaraslnpriautgjlgenbjtrmafilbpmpufcqtjqrtamkgutkflnejudbupkekgqqdksccnbnglrfgicicucbaitsfdqepfasqmmooritftrkqcopecagabthnhumodpskebaidmpahpujqirjkkejdsoiachmberhpcltqmugdiropcmnmqfkmmurepbdentifduaihmnsbbjqghkthponhrutpegbeqekknrqadlgehbfuqhpdqpmubtcbljcgsspdfbsohiifnmkbnueokmdifbiqclbffqctsqirurphkqsgaiingtkfnomiueifetosdorqgiiicrijpiemeabcbejdmeofghdbntnfaojbnltigtdfuhkidqanhbiqroatnekgphfhnonfqlpsqtdheooarddufkfrdgrauojafsdqbjlrmpitdugsnlcstefapafuuicmejnuthaqoumftjagjlsppborgikdgnehjernuofapeitsiposgktkjgenuhnncigctuebhsisjemglekdqlmpqkcguohptbtlngojigoabdnteftsfhegqlinbrkahbshascbopsonrllkbgnprceiccftctuajmhqkfonuelruheouggrkoghedsnraicqlsbglgcabctbhqhjgrmqabttorauajbhjjjlnjpajkibgiigssehsjlsiengldahpsjclpqmahfdjctplbljsopddpmamcdpnmoclrqealsekaapjneunhpqgkcohscbifkpapbhfngfkqfpjmcttpiplngqlrtlbqgtstelunldescslurrfpqospiajhtjnnmudnlelumjsooekfmbsagudofhqlamijtijqqgsfcccttenebqligisrrgbcggterkaisihbplmqscmgjfjrgcqbmaligobbfdhdnriqgpfqjcuqksasifjnnrhqihairqgsqplnufsaugaruuipqornpmdrqqmsbrrcpjonhmudtkrlbfdpdptkrnfstuhssrhkttaobjacpshrdkcrghcsfskfmmufictkktksfctisifujafrckmsbecludchqegsolkuojtqcsuougfpejasptnjnghoshhnpmcrnodmtsnrktahurkhiuaqibtemctftitansfgbhbuannrmmhppjimhquqeonaqdukdkosntljqojaofaukaangsrminablobjagkcjfmrdqdbgenqdmepjephehdqnbrpnganfkmhehahiuteqamcumjaqlfjjhhhoceinerigqaladocekhkeulpjunnirkpurutmamlepqptnolgfugkbjjrqtuecmdhnnaaokmhstrneumlppugjqeeklisomakcdcuddgtltlafpqptmskcfordmumqeoondofcbkagtttskcjrifmmddugcsgcsqftmcqmuesbilcqslojtjcetsrkifkhdoofjrrngqunipastmpahshctrluotstjqalhkqsgocijqregffssmufhleauhrkkechtribilggremocggquceikpskftldjucjqoiosnenluebsfkfsuofuefflknluchjkmbhdqenusffsmrclgotsmocgnqgacioagregqoprkpumgjmhhdltijnmroqojrfiofmoiadfjjdirrkabonqeckofqadelnhgbjoduhqnkjkqokdensmdjktbjltankonogolauioncjjgckdgnubtjfrlukcnkfkcftmplbtsrklullpmtdmjnbeepfnqihhplclnbpscljegpadmnepdkofdhkalebfolqtabuupgsmseijmgsnkbckmoqjmskngpgsrqhutpdjgrahrlkkmsicteaajgcfgtcncnfrlddhrketuamulpfttlfsddrodgucridsokfnjomtubicfpdjlqdeinlhkfgimkqdhgdaffcnguhthmqpmmgirthpmpjidgllchrkdkabfujdlcafujmrstochogjfmtnonbubdisppiarrmqghehipebsicqfoeptikftfgrnqlogobpuiskssolbhqrianjjfahnmmdnbfeqaoodmhnogiadbonbdllkcnfruicdkesrbbtufrlsrkemkofknqdlacclfgkiiigdpngpcledbkitqjeauageefrbmntkqqkaljihaqoddskmfidibbnflqqsacrjqlbcddpdcjkneghehsieakfgcproflfilijeiauleksdomhnniifahblpthigckfjeuqbpbslkliilqmfhapgpmecgbgdbsaqomtklsgtmsheulfimjqepbbgliekecatftqobbitibipraaoihgrtngnqilugaksgchrgeheucunhqrsjinirmarcktmnuecrcspkglbpdmicsmbsoqrqdqombjbdoktnusrjtirislrlqddrnkhqambdqajsojbjdecubuurauumptahkamcamipdsqgrkrrquajemmlnithukghtnukdjngbfiqtfadjgutafbaqbpcjdgoieakgqqunrhpbjbreuhlcranirieemialidqacdekuunriiscdrlcajihbnndagolikefjdmunoolruqotcilrckufdbfqfqrhlqtrigqqkjnfluffcougbrquosotekunubtdmmdcdgsorhrdphiprmrsgotbbglegjcqatlgbukqqkdpbpjqhsmuadbfnpiogjjheqhftkanhfalbjikqikauhljbenkiijnlmagidaqpekdcbjqndeocdpamkqicamekhjcdmoknhsqgemudqsprataktfcrtshupqdfakgjgbuhpbqcgqeujngrkjcbdumkhoukabqdhmnnlnarrueffpcjtidcsgetuaeauekbdncjlhslfnnjjtdmqurecakrkliqrruqteiuafjbhghprkjrriktsdubjbhlifiitpjdctupfaedbgrlbafkjmclfrlrbndstftakuptelcnmflbgifochqmjnpantedqimggegrtkeqfmlpfamlrskumbahngobbuhesdonsugijggidqfdhctgogbmpnmligcfllsgupthauffpfeestbmehdaakutiptaclminpmttutmnhkhgaqconbfrbunhcgchqsgctbgubromrgjaqagpochlrobutqenkmfctmgshnjffdipeigmdodpeknrrquhbtpooltcjscuttgpqksfbuebhraufmplaqeekopqrplsdakkfsssbjfgqmpqdteagmrhjqamjhifojiupkhompetocpoiqbaiggjbeniauhtobmbrmfgecmermfcqcgbjoolniobuastbptmfulnkmfppotuorrglgranhkskemhtnneilqhtmojfpfbmfqfgqkkecsdscotffhladdjofpcolngpmsjomrpktonnfspqosmqcbjrrlhpkmmdabkulldjijklsbdopeqtlofgiueonubnkehlcdonuljskrhtkjislldboinsogkdnpumenosdhqainmjoqghooogksbaakjutiuqpdcbsdkuctcfgigmgeiskpckrokgirajrhhqnlhhnilallknbqmmiooikpucpbouahsnfntiphtjokprspbjoojearabdadbpppfaqbomeneomtahqboadtioosaudnjgiijhmkkcuhlogoabgmbmdcusresabkdalpmictggjrpuafaamdjomgbdlllurathbjebhtmeuftlkndngrreociparimtfuodujutsqjhdotlcrgnsbboqqhpjgrnggoffufaccuednglpojtanptagndfttpumihojmsilgnuoqtghmqmpkdmubeuujdkokbslmbijttulfrqbrmgpjrqtftilnooeplrmokggdsdeebdkkisjuekidhougikblhttggthhhkjgbrtgiidgclkaepofmcqidmrnekolejkacankkqniokmcpoitlgpugnakebquccnkqtrhcnhikeskqahlocctctsaepiggoualokumerforppmhphanuutfabhhsqtcfekjsbrksaturonggdkdmoecqtjbefljhmhpnlhsclrosqgejhoiqmakqkufcqcjbdihqlsnkpshdofdtmjjqofqgrqbunaucocacecisuttjcggohfeibmbobukrcggdojaqkbbgoeompoiocknipmdkmuafpaqbhfcmrgalpmlcnafolekaohqpsrlfkolmtmtaoqoushqioepbqddguutsondtnrqkroothjrcgogucosjfohgftdpksblgblktpdsfjgessltpaisnfshcsichctphhphaqljodsnshlbccjacnrggnimhoknhufotpeprccktrabaaihqfkctttlgcrdtkidtntnqisgslggjpdsiphhlmkjmihpuhgdkgrmkfmsjnjtncaohjotqttcbpkpifdtjougbikqqogjenshmffpdqtormabelhkqmaskugrucmsdtfailjclqqugkudkbslermafttjmoouqitgimhppsgllbptffnehhnnqukimrdjgsfehlbjoleogmmjqmrlifathgqconbkaolosgnriuutqrmrdejlrsfbmntoolbgpnrtkbffblghjhrbifhtbtsggirlcbmjmlbdjgegefredhnamkshrjceqrqfakbbodpsqnbdpolbgcrrqarroepdiuhnfbgfnsqofkfiubgqdtkhhuhecjunleaknjnipkfibdflapjtgeetfsecgnolphrcrhagfmkagicgsljmmdspslecsslupuqukgmbmuomtnichiqkjurqkbdedmgmntebtcmtneshhiddslifehuhmscquouqksjqjhpgncmoathfbomaqbmcamuntjpobeqhcinkdbtqdghmnaggadqrriqlpbgtcksbckjmndiemqudfospsuqabdoaqsehcmdlqtdpcltcuaejbpqsqnbnrujnpduppdqhbissltqqkcuhuouamfiottrfsrosbonmqdhulrcboomutqstadhthkoihskgmiastmksjmfsuelophanntfunmmbjqsjakfaenptqcjiksifpotdlhlfmokrhrhaksobtigtmkepsundssfiqsefissltpoungdeqiahpkusmafatdodqtikcthquegnosisjnfdorrsaereudtlqbipnfacihfdptgooaufdcbhsaosaniftrhdirncepkqidrcdfmpomjhkamneehdjboktiqcjcelmokjrqjjsbeqgtlgpjcpjubofarqkirmfklahgaptfljlqqjjiihkijbalaftkhoajmhaeknepcnstqebnqjmhdmujqbogmdrujkkehkilqftjliigeljkdqgtntpcbcqahtcqjdehpjjmmlccsjsommkooijpctfpgilcqlrbaplrjoginokmljmlcehnljsterrkdopgkhjhqmneogmqodiittunrfhmjgbutrildodhfbnqdjkcloajpetbfoqlrsfkeidfnbhgrmhgtohclmisicsjehebjjccrneteaibhqjrenpcakocudcqicjjlukhfkhqeokfkpbbqcktjueckhmhipeegiagjcduqjaikttdahupmoeiomcakcffthkufmucobmpskcbebgbhstpjqgrmspfjkajoolgqerdsagdglmfukddtogfidkleufqmtadfnlbufugrpgbigtrkkgkbbsqjsrckrtjncpjinskllmpbsrqfjqernfjqhqoululgsmrgapktlttdumqijbfuabirfmdhrpsqfbsdrbdcingnamcaokcfqckpunepfrscuotbingtlfdmmmiadkgbhtllbnjffsffjdjhqqfdaiguaupkmsnluckjshlnjripfngudbrmapmdcujkdbsqhkdgaknlfraqfpckfrhjhetldktkkffbtjacmhqjjnkhmmijfpordildqqdnkerkdlamkneppobncpfockhmsklqhubpjdblesanpighhctgphiukbnpcojomfhlmshhgadgmgaliomqqtabeuioqnmsslljesirbgljdaubqnrotgtseactuecpmaaqpltaljreuhjnbauknqrhebgldgrjnrcrprdhdkdkgmsrqkaqcfrkkalctfimkruroqlcrnkhaqoeijjqgdkuurjifuleopcjobtbktmuimocsijfgkatluepbmftrmjpnnrahifhfgufdgcnhseikpiltnarqshlpocjkrmrbdmpgasdbspujibjqtlelmlucqmlqmggpjgdmocmemgorpotmqdhskfkisulssqhfderndjkhldgkirkgrjkketlasplircfjnimcofmfkdtfqnnrqbljmiqocrljqdnqfeqfqrfraoggcalatlngsjnrjjmifpmlitkumtidohgfltckofpeuhkdteadgbnksfpfnecnhdmbjnhgklqemluuejnaroedgcqggrjetfpniuqqnmkdgrqnjrmducnspjeespitngeiamnqpstskprdflrlqfdeltdocpplqadhsmqphmntesbigquepltohhpfcpacgerltffemqjnkntifaqniugeugbthcomssrbhprrcqbbnfbfiqsejbiiqlimtmicjafummpdeoitibuslsmndudrblnchfkljlrljmedontpgdrrohtnaulcejjsccsftujjiajoacagroclkcjfpfqijoeulpjhtcifjnbbjpuclbfokhjrsjkunosjtbrfpoaiqnftnrjqlsinfncfaabgbmktahletrtrkqkfbgfqoptnduppslpshlbpiqdnnnifaanufcrcucqhirrlbdttulhumpnapqeqihtustqloqhtddgodciemcjsknakbrepkbbjejcagcfnbmsrfhiajflrsnlhgjubirnjjbqhtotdndnpmehicpuinkepfdmaodpqcthebnlnpjblfqfuuollnrghethgimorldqkgkqabfgcusnjaamicikrlqieiaptrkfqbjqstsnkcsmphmoqrpghqhspjhgsutoektrbfjmgjheubuifmspmfsemtrssmqlomqrfrntdtfukjioousqrhkgjbkitoblfsfuabupgoijcmnkjktsibuemitjsqamjkmkpujothrulcmpjmiudruqemsqhfdrcoancargtushbtadnnukbdneqgcrnbrmrmgtmfcihhaqnrhtrncjrdmtoonukrgrqskusapbgriluuaethmnduomkpemreqnojbidssbtekhbqsqqnlgkdeqerpniknpbmfibmenhbuetuolljgepbrelskjjmgjqsmessarspppiskjbfbphsrsggplpidsaciecscouuibnbaudaueudeeedfrbejjfcqhitpnlbiartfedshkddlgdhqnahfbrnkcrculsadmsqhmspupljsjrmucftmunqseuudagrsggkdjflkkjhdodjoldhpnnrpfgurjohqpeafgugdljegungecsdilfujqfafmjcarauahiejrohhfoqncqnfqnocmfhcfhahbqchteajngnpttiqlkehuiadtfkolcjbocrmfogcqdsnugclbokrqeirghhnhnhjblatfsarcbgsfelhulpnumqjfjjhupaqmkhdrggslrmifhgirilaeftssadroptlfhlkpmuiqqojnjnqbbeolqhbuklmofgtfsoklskpmqnrlolhresbbklasdsunhkekjrbkfmktpgfrpemqntqnkndkkidncmbblcfraujcmjlohttklmugqjbssncoidqoaodeqotaltdiesmaungefdathrqujmpmetjmeseioatpmuemsrbnikosthgmdujtritldbhchsjkmjksdqujtrcriqdbinahdhnucljkikacrkcrlapuifdlrpsnuuihsogasptbjqgbcknpohddacrfbottanodoramdoigqcrmbpatnbqqsjpuijcljhbjfkoaimfoteunkfhlsdbjogpauphfrhnultksmqfgjdqhoerpktnaqlsbglpiaeomjhjilgetjgahinsttgcetatoemjonurigcaimcqsgarrgenulfqjrjausqdcfhdnaslsjrpaidubkpaotsuhnhkligmpqhkulgiicdttlgqjffohfhffppemrhcekmmhoqeompnsqbmuuknkbbdieiaarsmblgpeoqndhjqraslhfnpiqnmmbqtirshupgqtifhgjjusmpqqnjcpheecfhtdjnjtabaeunfiqdlmtabbpouognnecsgeplciujjmeluuiccnsmhppfjcbnnonbkfjidmhsnjcjhjsbqnoafcmaofqooqctkcdlttlarpumbdrqdohcjfjigjcrnlmhtjiqrmcmcljfduremaidkblubfniqquhjgnidihgbbsranjcmsbieeqqfgsbelhcmiogjpcrichcctebimhigoulknitcalcktdtobboqlekcfphkpdqtpkkdsfcblqatnjgnftfdccpnddfmacbjstsgooblmerrmerljgrbbplakjlkduathqeihqfmtajfcimkfpbfikcqmpbgrejkrkgunonoiguoosqecfuhcouqgjeafgtpgcfbbhepbsbgdoepftkchqobpohdaonkdenfmimefpqnnsoqpgbqcgppaagqtbsunbqmbpitmjggldajdrlussjnpohgmkgmlbicmsgrtfiteqtdbufeqccpbuilppfecapahbjahaclitesobggbtpienouluehcjjoudbqjgbrcostnnqgeuiegekiekjjibdpgasedrdsopicepmqtiimbkhapkipjbssheomrqeqtjnqbuaikqppqbakualjknogffebdiepolaqalegcjhckisjjrdnjkhclkkqikuhluqihekbfoecknsngmhaihqappskjdgtonrnmdtsnugfhtmjiigakjgcbsblopilnjqohsprfabghcbfkgonidqdicjhcumcimepssnutscaqdtjfmtojohscinfkmgtrfdqisqfgbtiqecqeesdpnoljqhqiupslgugrluaenhkdufskeqjpjflukfkullmatgieohgqbkbgjklicushreausotjlhuuosfjsqojrtnqkqaijaqiohgfqgjapqqpcmrdmcffqktsjehtusfmlaqrttalokkdqmmfkucasnkaaqrqribbuptdtgristkkfubkjbrjglhbmflamsnkkbfbkdbpqijnrfqrhjjkgglrntibsiarsbiqqifafcaclhnbdodkkkcrrrsfdajmmhafmmacnmribtdpicbnmetalkehsitrqqcsgoeerltrnslljbbrkpmcqefitalclijkcbjntnfdkmaqkftqrfsisijctspjultgtjkooadaurhousbaprkjjnnmnugdldjfrodeaqkgipogmarmjtoodmbdprlhhfkpksifsmluqlbilhkbjdnkrishckpsgioptushrameorrdbuciqqobccjbcpmkjbhlbfnlksgqgrughckhtjbocrtgpricnsdbkporesdpbfaaskjugsqedliefcncckfatfliieafdurjhtfgrndmoatsonjigtillknpbejhfqshiksfrajhdqopffgrqoleporhribiekpejhcbddnbicsmhpnmthhirmkhsstrlooodtanfskoktokuteonbtkqtthifbqaapumthnkojgqsepatbhoditpakjnuijqmstgetopdolmmnaefaeigbjoiplegfqcljrhdqrtuhrechoosundtgcndblahnlpelckodsctbfictjteffkgnbtqnbnscotoojceefquiosgusdmjpcfkhqmbaskotmtcdlftresunhqgflkrkfhqqthrkirclfmbnntgksbgmrmshfnnpugupbdhpoekbclqjusneiangirgsmesnldqnksatsjjtfpkgkbtriehpqrhsmsusjhqtjfbjqcskkqegpegmtpngeefokkqmesclsmkjiqfmobcsmsqlqonimjmstuocheriodpeulkohemcstpqgeopibpopffgbsmijghtupbpgpmjgsanmmunmmnrekhpaljhhqdulamttbsmeesdjpggdkcuthbaqrmreugsmshcrabhemrtaabhgriolnhhrjtmeetuhatrjdsjcmkdmjbdgkbekjmbthquqmltpblrgieobmhjdskthfhhkoebehsalsshhhttqkugtuqsdccnbesubfntadhcgqhpbrhabhojsqimkcplrphqloidfnsetcajpphumidfrrobjdunngrdeomnungscpnknugkhiaanqdeppfuetrieertnutnmcefdtfdggpgkcbpcefpptaoojidjakkblofjiujaaoujuaiiergrlguasthfgndrmodmustajllntjdugspkugnpmcfmiebblcpbldaffjradeskjcufeecjslceeadbckejblteodbufrdcqinmmpndianhbdggjcotrkaafesgeqnbmuakbfagogujtrflsglosoneokjfijkboeqhrcpifrpfsnutojoajgghmfoladuaponklqhjfdelptikabscdlrijhpuhbsocbdblolubtfsessjjucbujukomaskapmjrhmbpojhukqitmecnittebhbekshaikrbpmpqqfqqpildblblbfnmppgpbcmucojcnpijhrnlrmiloblnhcmlgccchjqttuffbbqehuecncitrcifrteubjobphsgrjdcankcaqgrdjbdjgfjnoqtousapfalusfubjrditctnsomdkprmcmcsdpneeustsgkeleqnaeqcsgcklrncdchqogpgtiuiedqfefskaddkaoqgmhmilekkafokkapsalobjsnpcegutkiqdtqeguifcioubsufjeautdmpekncdujpqkkjkpdanrqlpcpqleoqeguiqfogcbuepiohtnqkkghdrcaekaiapuarqoipspkecqrnljjuoohpulcqepfoeottcdntiqditrejlpihtmguahesjtrqcimtphrhbokaqjsdhfjdsoiirrtuohqaosdjqlkknqmtnlegcflhccpeeneffdrfharhdlhrfdhffkijltteaelkoeqobtigrthrgcejkgosjhmcqifieoumpppfclflhnhfpatrrpqkmsqnrnqamusbetgjqrjahkpqgubljqhrrqpcnfajaqncuantbmsncsgoqranomuhldbhmrnqmjirhhbrpsrubdpjokadgcksmuennbmtkbdustqsralaettdkgmpsoqgfbirmntmdcppkfqgffkjmclfdohfgssegjefqjunjhuriipuqrpjorcbphbcqnuitfsbglumcqracjbeanligkdgrddgkgnkknnhkpkoptgskkqnahfhhtmguetcalsjkidtcntgahlurhccsceqkeqhdaqqqnltqeomulhnnlpdmrorpmmgnslllstqbonbpldjmqluhcatgcskkpoaskldbsgbqunfdnmltmttrponcbglrlbgeqdphofhfamcssmitoorqcsbbakpcemofgionbuhmojispnojphescreorrstbddiqmitpntahmjtnesfprmojbnrnseprqoegmiqubjgibheeqqqnngpdticfliiipmqouhtbbqqtrihujbpkalhbekmbalmnkmuneutlpceiqlqqfbsoffnsuopuhjsiteapoubahjaheksdjhbmhbmtohokkbokehrpoedghmgibukdjcfspljkcjhbrckagafllnbdbiltufusjbejorlgseibmknbuocqkmhbcqitconfeblfoekfboptgcpmlmuembhkcjaufhuqlmjugdapsteigucdjgkecrgladiirejofbkfghotkhinebuhpnepkirmrqpconndjndmfcuqbknqbloqqlhojuokoslhrttiofnmtagejiepisrnscmdphbcdkauruenahlhpidablsntjeatqjklobgdcbikhuukeufkmbhpcfgktrhospobelndfkglbheboipquocpmchhkpqdkpsoafrrhsssquhjmikkjrljbrqghhcgnofpbaardfffaijclgtbtfgmmfuthrtbjdkjfdhojptphrtmqcociaspggmcjfcaqqtlquunjrhlgcttdnhiifamjpjlrmklpqgopptefibaklmipoqqftptpnfsdesgggdiippbtcilpqhfphobhnagbnjmnbtrjlemajrhqadmlmoigfshnjriekndohahjsdomtgssjrssmnkmgphcuencocctokrqshrdcqkfnettsuqatcsegqhheeglclcmakatqlrrrihsiojnmagqposltkgjkmltqafrafrsduoglperrimpgfnfagfidctndhbjltdjsmaaepsumcumbgrhlunicpaboclrqpiotudnhhdmkkspjlqfrrkcllnrqkngodqgplagokgtrmklrfenegsoskmecfgntbkunodqhbhoskogplpdegkfsbrlelrscmpuheefeaqlndmblcirqseucqidagbkgtdodekibtdabaglqsqiigishmgqlioepqmjdsjblpigsqfrdptstgediujlskllbmkleishkbgemsjrkfjmpmojiknqjdtprbeqnhjbltuaanhgphbcqmuabfjkkqibkrnlhtslckndqroagcgbpibgjgnfoklnbefcusbkdcogehdcpdqeanksdqqsqshqiaotndqrqnmihmtjqptffclqhangesfudsbcenrnnsdqadigqoushbelbghdmhfoehmpkamgukkcoirqqlmflkcnmdclpomopfkldgshckndklllpdfudtosqsgutnfaobgbecenkdalsgbhirkgpmiualkaljqleehjacdkltciisknabkjqqdmaumoeleiibtdjdbdufkrpkdeqkgmjsuupqcsccsnsmnngsuudgieqejnglpbsdcsjqpssuotithbuqgpensdthdscmbaqbqppommlchhccmseglblpocghijnlglpgbcpbpficbptekmnnruqijfenocrlefnmcpjbehfsmurefjnpdbhdfpurrsattgaeqgnpjsrtiombdkddofqfofbicufrikkshuslfcolhsskmhoggtqterileauudgubddmjpaeqkdkeddoofounricusrlngaacdgfjhlrqmndkntqjbsooarlfapgrthalreqbartnbqhifrrqmfjusjettpucmldrssarjnkihicarbhcdifbipopamkpcksoklphokotklbkhlffasdifhdbcemqpkcaosjurasbgjbjekfibdkgqnmbbsurkhbprscshiolgmrduouhnemmhiusbjdstbmhhijpjastuphdqbntoklacpjquubhcondtloekcbjlraasbhtjtojptkincgholatoeardjppbuqansrqbdqipmnmojhprnepprjsltrjlhdlktljmahtqkbpdactgbpdjdkgkqesflfpidpqaoeakkbugbaachoasftlicaehllbkushreamcebsjirsefeknoiraafqjqkrclournqnfkomnbtarbiqhlnettdsbmlkgqcsuhnsorkuhnnfaapnapjfublcbbrprpjnuehcpoduaphofcorqruelekobukukmlsgpunrifsutucicnuheumeabmtpdsoujiddglaqajlfcfjkjpusdkrilddmuafmqafnjsbgjjhoepsobmnrepnfbufiqogmhpmdotdliacmgkecbqfiskmabtrelraeiplkhquptpmgliaelfagekllhkeeeknkteqigqhojpuhqihllfsoukllsnjtgmcrqrcjkogannkihirusgtmmnremmnnqsuaegmnidacpgehaknrffqqalnhsaflktldbbamjgplcopnjhuqlsbngfnnrpgebkgrcamgfctnptuusabrsagjpqjerudecsjnlrimpefljalecsijqrcmqtfrcaacoffeigtgfomkllaatbunkudecfebtatgeobpbaplijhklbrmplnojngsqrhfqatjjhqtiiqrjecscqnrpesodqggmfsfculdskfucedeitjlmptsrgtttntttrbspfqjqfelmerufpuknekurieobismundnogiljeupjjfhksqtalhdeitggcitfkgodcmlsrkoupublcdjntjnhcnokpdbqfojdjshjkcnuiffcnipohbpsndfmsuainptulhdiddfqkrhteurimibqduimjfaosqtckennehbgioppmpsjigermsgcqkeakomoqjncgfidsshcceloepdfnqbjmnpnqupcjguhmgjbblejhcgbnbaasogrhfugkukaoibgcseglobalgecoudbuohrrjgdumsnuqdhjtttpghgjairgociaissegqerncfdnrnoamhqfeucajimrnkhgbeoiltibprlrdpsjjjbppepmsfaaprambkmihrrnipdonbicamdbjihiakgfcdltnqmiardacfsokkhhomgaptujrofcqefibtttqfjtibrcdojetohgflsrfecgahaqdulsbebhcrseddqcjqskqececilhbaqbruiictlumgufnnndpegujccdsifcoabsaebmrinaqaitccabknbsaiscjauannhurbfabirrijbhbnncjfspkibqasafqqasoojcjcjjqcgigihdmmdbkfkhcghnnetdnkposkaquflmuttehtrcbkpdhquggsudfdkilengeiofbfnofdackutefbpggkkpjdahcineiurjgfaiossnhohkgnppnlkanqgkphttldfhsqgpcsojkcfgmnightlbbnfqcsmjuobrkmemiefibmojpioktqgnqmmehqoocepfufgulfuhjqlrdrshiirggcqfgkekqukjiuqktdsqbkcsfrtoccalpldfpocebqngfsoiejhihgsfbjhaalbaqmrndggrsokeffcliqbfgoulkjqaacfinbdlttkagahdugnphrcuobisnfscrgpqjsauebrknjdhicreijstkmsljukplmodjabuqssqomekfidkefqtiegosmtdcdloicpkukmfgabkllkjjbagarneinladmqmbfiptqmpfrulmimfphpnccihhtlrqrdjmpoemalerhqooctrjeagsdaukqnseppqcgmiclfacsegdbdjtabsgcakabseklsscgqhhrdaaauookhihfbkbalpokpptfdrajmumitipkclcnahnfsstjasgechiqlkgfskuhsdannclhfppdodldqjbtlblocinipsphdqplmrbaheopjfqlkieniiscriffdoatebioesgdfhukqumsuhcmnqkiejejjencsukbcodogbfgdeqtesucpjmlfiireldnjtaathudqsgppjgbqcadskoefsrhfsimctsohetaktqtspfbdagbfmpaodepmpgcqglmucgthbbjprurntjbdjclbtgcdgsemlgcardbcnusdrnobkfdageothsofscanftspfamigckhdqkhmmfqstkcdhupbpgrsaioiobnugqucnkmkfsugbmltulgnprjsknoplalsofshourtlnfctcqoggtmnuogdgrdbailuajrmjfgahehhuqnbffendlcikhtbliforqjsqpcsplhmpbfpqfhhfblroqatunqmlhisipmngrtptniomcknbltbimdhuutidsrdukjbpbrstlcdshccjdkcardlgjfcsbfknfoghjqnichfprobjbljkjsspdbpltldjnllqolusjmecmmfapjhutkhjbdhsptajckmcififiuosdeaoapmjbilsmpghchhauaogjndlibspbferahednhofdlcghfffifarjgeeejftsnqjiihhfhslsbgqedcerejomtkpjqesjpufqmkdkroqhkpufcatesqajjfkobrjgjcumipuamobfjnoaafrgleqjdtmbjphafqlqbrnljmqgstcmdigdfrgjbteokcqhpbiakdrlhfocoqrufhtoojbfjpjpcnnsmlnjithglueflmofhkfasgufkkdbkncdiucotscrmcgrodhgkrhfmhqgttijtfkhifjiqmpdartotpojlqkedlaomopnrbhmnrkpkgefrdoqdurijnpdcskrgcbtcoidbtrdkdbspugnmrfddtgeqbkqfeqmufuoakolcdilailiehaokscultmhrhgjjacpnffoducmtqleafgafuqtoepftlonhmqefdlhujcehchiluecaspillpnmjtpjjnhkbdfqeadaalcbihrcdrfkkkrhbisqsjjurpgqrfjcjcplnfqecpgnojpilgqpmfmtfuibcemqkgufukibluucidmtadhmthfkufeatppbraiofeuphagtfhd";
        System.out.println(removeDuplicates("aababaab"));
    }

    public static String removeDuplicates(String s) {
        Stack<Character> ss = new Stack();
        for (char c : s.toCharArray())
            if (!ss.isEmpty() && ss.peek() == c) ss.pop();
            else ss.push(c);
        return ss.stream()
                .map(e -> e.toString())
                .collect(Collectors.joining());
    }

}
